//
// Copyright 2020-2023 Exactpro (Exactpro Systems Limited)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: th2_grpc_common/common.proto

package th2_grpc_common

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Direction int32

const (
	Direction_FIRST  Direction = 0 // Incoming message for connectivity
	Direction_SECOND Direction = 1 // Outgoing message for connectivity
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "FIRST",
		1: "SECOND",
	}
	Direction_value = map[string]int32{
		"FIRST":  0,
		"SECOND": 1,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_th2_grpc_common_common_proto_enumTypes[0].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_th2_grpc_common_common_proto_enumTypes[0]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{0}
}

type NullValue int32

const (
	NullValue_NULL_VALUE NullValue = 0
)

// Enum value maps for NullValue.
var (
	NullValue_name = map[int32]string{
		0: "NULL_VALUE",
	}
	NullValue_value = map[string]int32{
		"NULL_VALUE": 0,
	}
)

func (x NullValue) Enum() *NullValue {
	p := new(NullValue)
	*p = x
	return p
}

func (x NullValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NullValue) Descriptor() protoreflect.EnumDescriptor {
	return file_th2_grpc_common_common_proto_enumTypes[1].Descriptor()
}

func (NullValue) Type() protoreflect.EnumType {
	return &file_th2_grpc_common_common_proto_enumTypes[1]
}

func (x NullValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NullValue.Descriptor instead.
func (NullValue) EnumDescriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{1}
}

// --// Settings //--//
type FailUnexpected int32

const (
	FailUnexpected_NO                  FailUnexpected = 0 // comparison won't fail in case of unexpected fields or messages
	FailUnexpected_FIELDS              FailUnexpected = 1 // comparison will fail in case of unexpected fields only
	FailUnexpected_FIELDS_AND_MESSAGES FailUnexpected = 2 // comparison will fail in case of unexpected fields or messages
)

// Enum value maps for FailUnexpected.
var (
	FailUnexpected_name = map[int32]string{
		0: "NO",
		1: "FIELDS",
		2: "FIELDS_AND_MESSAGES",
	}
	FailUnexpected_value = map[string]int32{
		"NO":                  0,
		"FIELDS":              1,
		"FIELDS_AND_MESSAGES": 2,
	}
)

func (x FailUnexpected) Enum() *FailUnexpected {
	p := new(FailUnexpected)
	*p = x
	return p
}

func (x FailUnexpected) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FailUnexpected) Descriptor() protoreflect.EnumDescriptor {
	return file_th2_grpc_common_common_proto_enumTypes[2].Descriptor()
}

func (FailUnexpected) Type() protoreflect.EnumType {
	return &file_th2_grpc_common_common_proto_enumTypes[2]
}

func (x FailUnexpected) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FailUnexpected.Descriptor instead.
func (FailUnexpected) EnumDescriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{2}
}

type FilterOperation int32

const (
	FilterOperation_EQUAL                FilterOperation = 0
	FilterOperation_NOT_EQUAL            FilterOperation = 1
	FilterOperation_EMPTY                FilterOperation = 2
	FilterOperation_NOT_EMPTY            FilterOperation = 3
	FilterOperation_IN                   FilterOperation = 4
	FilterOperation_NOT_IN               FilterOperation = 5
	FilterOperation_LIKE                 FilterOperation = 6
	FilterOperation_NOT_LIKE             FilterOperation = 7
	FilterOperation_MORE                 FilterOperation = 8
	FilterOperation_NOT_MORE             FilterOperation = 9
	FilterOperation_LESS                 FilterOperation = 10
	FilterOperation_NOT_LESS             FilterOperation = 11
	FilterOperation_WILDCARD             FilterOperation = 12
	FilterOperation_NOT_WILDCARD         FilterOperation = 13
	FilterOperation_EQ_TIME_PRECISION    FilterOperation = 14
	FilterOperation_EQ_DECIMAL_PRECISION FilterOperation = 15
)

// Enum value maps for FilterOperation.
var (
	FilterOperation_name = map[int32]string{
		0:  "EQUAL",
		1:  "NOT_EQUAL",
		2:  "EMPTY",
		3:  "NOT_EMPTY",
		4:  "IN",
		5:  "NOT_IN",
		6:  "LIKE",
		7:  "NOT_LIKE",
		8:  "MORE",
		9:  "NOT_MORE",
		10: "LESS",
		11: "NOT_LESS",
		12: "WILDCARD",
		13: "NOT_WILDCARD",
		14: "EQ_TIME_PRECISION",
		15: "EQ_DECIMAL_PRECISION",
	}
	FilterOperation_value = map[string]int32{
		"EQUAL":                0,
		"NOT_EQUAL":            1,
		"EMPTY":                2,
		"NOT_EMPTY":            3,
		"IN":                   4,
		"NOT_IN":               5,
		"LIKE":                 6,
		"NOT_LIKE":             7,
		"MORE":                 8,
		"NOT_MORE":             9,
		"LESS":                 10,
		"NOT_LESS":             11,
		"WILDCARD":             12,
		"NOT_WILDCARD":         13,
		"EQ_TIME_PRECISION":    14,
		"EQ_DECIMAL_PRECISION": 15,
	}
)

func (x FilterOperation) Enum() *FilterOperation {
	p := new(FilterOperation)
	*p = x
	return p
}

func (x FilterOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_th2_grpc_common_common_proto_enumTypes[3].Descriptor()
}

func (FilterOperation) Type() protoreflect.EnumType {
	return &file_th2_grpc_common_common_proto_enumTypes[3]
}

func (x FilterOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOperation.Descriptor instead.
func (FilterOperation) EnumDescriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{3}
}

// --// Event //--//
type EventStatus int32

const (
	EventStatus_SUCCESS EventStatus = 0
	EventStatus_FAILED  EventStatus = 1
)

// Enum value maps for EventStatus.
var (
	EventStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILED",
	}
	EventStatus_value = map[string]int32{
		"SUCCESS": 0,
		"FAILED":  1,
	}
)

func (x EventStatus) Enum() *EventStatus {
	p := new(EventStatus)
	*p = x
	return p
}

func (x EventStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_th2_grpc_common_common_proto_enumTypes[4].Descriptor()
}

func (EventStatus) Type() protoreflect.EnumType {
	return &file_th2_grpc_common_common_proto_enumTypes[4]
}

func (x EventStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventStatus.Descriptor instead.
func (EventStatus) EnumDescriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{4}
}

type RequestStatus_Status int32

const (
	RequestStatus_SUCCESS RequestStatus_Status = 0
	RequestStatus_ERROR   RequestStatus_Status = 1
)

// Enum value maps for RequestStatus_Status.
var (
	RequestStatus_Status_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR",
	}
	RequestStatus_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   1,
	}
)

func (x RequestStatus_Status) Enum() *RequestStatus_Status {
	p := new(RequestStatus_Status)
	*p = x
	return p
}

func (x RequestStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_th2_grpc_common_common_proto_enumTypes[5].Descriptor()
}

func (RequestStatus_Status) Type() protoreflect.EnumType {
	return &file_th2_grpc_common_common_proto_enumTypes[5]
}

func (x RequestStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus_Status.Descriptor instead.
func (RequestStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{15, 0}
}

type ConnectionID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionAlias string `protobuf:"bytes,1,opt,name=session_alias,json=sessionAlias,proto3" json:"session_alias,omitempty"` // Session identifier depends on protocol, target / sender
	SessionGroup string `protobuf:"bytes,2,opt,name=session_group,json=sessionGroup,proto3" json:"session_group,omitempty"` // Session group
}

func (x *ConnectionID) Reset() {
	*x = ConnectionID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionID) ProtoMessage() {}

func (x *ConnectionID) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionID.ProtoReflect.Descriptor instead.
func (*ConnectionID) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionID) GetSessionAlias() string {
	if x != nil {
		return x.SessionAlias
	}
	return ""
}

func (x *ConnectionID) GetSessionGroup() string {
	if x != nil {
		return x.SessionGroup
	}
	return ""
}

type MessageID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId *ConnectionID        `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Direction    Direction            `protobuf:"varint,2,opt,name=direction,proto3,enum=Direction" json:"direction,omitempty"` // Transport direction.
	Sequence     int64                `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`                  // Unique sequence number in session
	Subsequence  []uint32             `protobuf:"varint,4,rep,packed,name=subsequence,proto3" json:"subsequence,omitempty"`     // List of nested sequences in addition to the main one
	BookName     string               `protobuf:"bytes,5,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Timestamp    *timestamp.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Message creation timestamp
}

func (x *MessageID) Reset() {
	*x = MessageID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageID) ProtoMessage() {}

func (x *MessageID) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageID.ProtoReflect.Descriptor instead.
func (*MessageID) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *MessageID) GetConnectionId() *ConnectionID {
	if x != nil {
		return x.ConnectionId
	}
	return nil
}

func (x *MessageID) GetDirection() Direction {
	if x != nil {
		return x.Direction
	}
	return Direction_FIRST
}

func (x *MessageID) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MessageID) GetSubsequence() []uint32 {
	if x != nil {
		return x.Subsequence
	}
	return nil
}

func (x *MessageID) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *MessageID) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type EventBatchMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalQueue string `protobuf:"bytes,1,opt,name=external_queue,json=externalQueue,proto3" json:"external_queue,omitempty"` // External user queue can be used for routing by internal box logic.
}

func (x *EventBatchMetadata) Reset() {
	*x = EventBatchMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBatchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatchMetadata) ProtoMessage() {}

func (x *EventBatchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatchMetadata.ProtoReflect.Descriptor instead.
func (*EventBatchMetadata) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *EventBatchMetadata) GetExternalQueue() string {
	if x != nil {
		return x.ExternalQueue
	}
	return ""
}

type MessageGroupBatchMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalQueue string `protobuf:"bytes,1,opt,name=external_queue,json=externalQueue,proto3" json:"external_queue,omitempty"` // External user queue can be used for routing by internal box logic.
}

func (x *MessageGroupBatchMetadata) Reset() {
	*x = MessageGroupBatchMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGroupBatchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGroupBatchMetadata) ProtoMessage() {}

func (x *MessageGroupBatchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGroupBatchMetadata.ProtoReflect.Descriptor instead.
func (*MessageGroupBatchMetadata) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{3}
}

func (x *MessageGroupBatchMetadata) GetExternalQueue() string {
	if x != nil {
		return x.ExternalQueue
	}
	return ""
}

type MessageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *MessageID        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                         // Message id should be unique in session
	MessageType string            `protobuf:"bytes,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                                                                    // Message type by dictionary
	Properties  map[string]string `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional properties for the message
	Protocol    string            `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`                                                                                             // Protocol to be used when encoding the message
}

func (x *MessageMetadata) Reset() {
	*x = MessageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMetadata) ProtoMessage() {}

func (x *MessageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMetadata.ProtoReflect.Descriptor instead.
func (*MessageMetadata) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *MessageMetadata) GetId() *MessageID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MessageMetadata) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *MessageMetadata) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *MessageMetadata) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type RawMessageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *MessageID        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                         // Message id should be unique in session
	Properties map[string]string `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Additional properties for the raw message
	Protocol   string            `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`                                                                                             // Protocol to be used when decoding the message
}

func (x *RawMessageMetadata) Reset() {
	*x = RawMessageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMessageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMessageMetadata) ProtoMessage() {}

func (x *RawMessageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMessageMetadata.ProtoReflect.Descriptor instead.
func (*RawMessageMetadata) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{5}
}

func (x *RawMessageMetadata) GetId() *MessageID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RawMessageMetadata) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *RawMessageMetadata) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*Value_NullValue
	//	*Value_SimpleValue
	//	*Value_MessageValue
	//	*Value_ListValue
	Kind isValue_Kind `protobuf_oneof:"kind"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{6}
}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Value) GetNullValue() NullValue {
	if x, ok := x.GetKind().(*Value_NullValue); ok {
		return x.NullValue
	}
	return NullValue_NULL_VALUE
}

func (x *Value) GetSimpleValue() string {
	if x, ok := x.GetKind().(*Value_SimpleValue); ok {
		return x.SimpleValue
	}
	return ""
}

func (x *Value) GetMessageValue() *Message {
	if x, ok := x.GetKind().(*Value_MessageValue); ok {
		return x.MessageValue
	}
	return nil
}

func (x *Value) GetListValue() *ListValue {
	if x, ok := x.GetKind().(*Value_ListValue); ok {
		return x.ListValue
	}
	return nil
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_NullValue struct {
	NullValue NullValue `protobuf:"varint,1,opt,name=null_value,json=nullValue,proto3,enum=NullValue,oneof"`
}

type Value_SimpleValue struct {
	SimpleValue string `protobuf:"bytes,2,opt,name=simple_value,json=simpleValue,proto3,oneof"`
}

type Value_MessageValue struct {
	MessageValue *Message `protobuf:"bytes,3,opt,name=message_value,json=messageValue,proto3,oneof"`
}

type Value_ListValue struct {
	ListValue *ListValue `protobuf:"bytes,4,opt,name=list_value,json=listValue,proto3,oneof"`
}

func (*Value_NullValue) isValue_Kind() {}

func (*Value_SimpleValue) isValue_Kind() {}

func (*Value_MessageValue) isValue_Kind() {}

func (*Value_ListValue) isValue_Kind() {}

type ListValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListValue) Reset() {
	*x = ListValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValue) ProtoMessage() {}

func (x *ListValue) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValue.ProtoReflect.Descriptor instead.
func (*ListValue) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{7}
}

func (x *ListValue) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentEventId *EventID          `protobuf:"bytes,3,opt,name=parent_event_id,json=parentEventId,proto3" json:"parent_event_id,omitempty"` // It maybe used to store event related to message life cycle
	Metadata      *MessageMetadata  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Fields        map[string]*Value `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{8}
}

func (x *Message) GetParentEventId() *EventID {
	if x != nil {
		return x.ParentEventId
	}
	return nil
}

func (x *Message) GetMetadata() *MessageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Message) GetFields() map[string]*Value {
	if x != nil {
		return x.Fields
	}
	return nil
}

type RawMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentEventId *EventID            `protobuf:"bytes,3,opt,name=parent_event_id,json=parentEventId,proto3" json:"parent_event_id,omitempty"` // It maybe used to store event related to message life cycle
	Metadata      *RawMessageMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Body          []byte              `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *RawMessage) Reset() {
	*x = RawMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMessage) ProtoMessage() {}

func (x *RawMessage) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMessage.ProtoReflect.Descriptor instead.
func (*RawMessage) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{9}
}

func (x *RawMessage) GetParentEventId() *EventID {
	if x != nil {
		return x.ParentEventId
	}
	return nil
}

func (x *RawMessage) GetMetadata() *RawMessageMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RawMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type AnyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*AnyMessage_Message
	//	*AnyMessage_RawMessage
	Kind isAnyMessage_Kind `protobuf_oneof:"kind"`
}

func (x *AnyMessage) Reset() {
	*x = AnyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyMessage) ProtoMessage() {}

func (x *AnyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyMessage.ProtoReflect.Descriptor instead.
func (*AnyMessage) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{10}
}

func (m *AnyMessage) GetKind() isAnyMessage_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *AnyMessage) GetMessage() *Message {
	if x, ok := x.GetKind().(*AnyMessage_Message); ok {
		return x.Message
	}
	return nil
}

func (x *AnyMessage) GetRawMessage() *RawMessage {
	if x, ok := x.GetKind().(*AnyMessage_RawMessage); ok {
		return x.RawMessage
	}
	return nil
}

type isAnyMessage_Kind interface {
	isAnyMessage_Kind()
}

type AnyMessage_Message struct {
	Message *Message `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type AnyMessage_RawMessage struct {
	RawMessage *RawMessage `protobuf:"bytes,2,opt,name=raw_message,json=rawMessage,proto3,oneof"`
}

func (*AnyMessage_Message) isAnyMessage_Kind() {}

func (*AnyMessage_RawMessage) isAnyMessage_Kind() {}

type MessageGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*AnyMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessageGroup) Reset() {
	*x = MessageGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGroup) ProtoMessage() {}

func (x *MessageGroup) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGroup.ProtoReflect.Descriptor instead.
func (*MessageGroup) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{11}
}

func (x *MessageGroup) GetMessages() []*AnyMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type MessageBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *MessageBatch) Reset() {
	*x = MessageBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageBatch) ProtoMessage() {}

func (x *MessageBatch) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageBatch.ProtoReflect.Descriptor instead.
func (*MessageBatch) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{12}
}

func (x *MessageBatch) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type RawMessageBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*RawMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *RawMessageBatch) Reset() {
	*x = RawMessageBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawMessageBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawMessageBatch) ProtoMessage() {}

func (x *RawMessageBatch) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawMessageBatch.ProtoReflect.Descriptor instead.
func (*RawMessageBatch) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{13}
}

func (x *RawMessageBatch) GetMessages() []*RawMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type MessageGroupBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *MessageGroupBatchMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Groups   []*MessageGroup            `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *MessageGroupBatch) Reset() {
	*x = MessageGroupBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageGroupBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageGroupBatch) ProtoMessage() {}

func (x *MessageGroupBatch) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageGroupBatch.ProtoReflect.Descriptor instead.
func (*MessageGroupBatch) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{14}
}

func (x *MessageGroupBatch) GetMetadata() *MessageGroupBatchMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MessageGroupBatch) GetGroups() []*MessageGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type RequestStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  RequestStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=RequestStatus_Status" json:"status,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RequestStatus) Reset() {
	*x = RequestStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStatus) ProtoMessage() {}

func (x *RequestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStatus.ProtoReflect.Descriptor instead.
func (*RequestStatus) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{15}
}

func (x *RequestStatus) GetStatus() RequestStatus_Status {
	if x != nil {
		return x.Status
	}
	return RequestStatus_SUCCESS
}

func (x *RequestStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ComparisonSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailUnexpected FailUnexpected `protobuf:"varint,2,opt,name=fail_unexpected,json=failUnexpected,proto3,enum=FailUnexpected" json:"fail_unexpected,omitempty"`
}

func (x *ComparisonSettings) Reset() {
	*x = ComparisonSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparisonSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparisonSettings) ProtoMessage() {}

func (x *ComparisonSettings) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparisonSettings.ProtoReflect.Descriptor instead.
func (*ComparisonSettings) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{16}
}

func (x *ComparisonSettings) GetFailUnexpected() FailUnexpected {
	if x != nil {
		return x.FailUnexpected
	}
	return FailUnexpected_NO
}

type RootComparisonSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// These fields will not be considered during comparison. It concerns fields with simple or collection types.
	// Comparison result will have the NA status for them.
	IgnoreFields []string `protobuf:"bytes,1,rep,name=ignore_fields,json=ignoreFields,proto3" json:"ignore_fields,omitempty"`
	// Enables order verification in repeating groups according to defined filters.
	CheckRepeatingGroupOrder bool `protobuf:"varint,2,opt,name=check_repeating_group_order,json=checkRepeatingGroupOrder,proto3" json:"check_repeating_group_order,omitempty"`
	// Time precision format for comparing timestamps
	TimePrecision *duration.Duration `protobuf:"bytes,3,opt,name=time_precision,json=timePrecision,proto3" json:"time_precision,omitempty"`
	// Decimal precision format for comparing numbers. E.g. 0.0001, 0.125, 125E-3 could be supported
	DecimalPrecision string `protobuf:"bytes,4,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	// Enables ordering verification for collections with simple types.
	CheckSimpleCollectionsOrder *wrappers.BoolValue `protobuf:"bytes,5,opt,name=check_simple_collections_order,json=checkSimpleCollectionsOrder,proto3" json:"check_simple_collections_order,omitempty"`
}

func (x *RootComparisonSettings) Reset() {
	*x = RootComparisonSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootComparisonSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootComparisonSettings) ProtoMessage() {}

func (x *RootComparisonSettings) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootComparisonSettings.ProtoReflect.Descriptor instead.
func (*RootComparisonSettings) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{17}
}

func (x *RootComparisonSettings) GetIgnoreFields() []string {
	if x != nil {
		return x.IgnoreFields
	}
	return nil
}

func (x *RootComparisonSettings) GetCheckRepeatingGroupOrder() bool {
	if x != nil {
		return x.CheckRepeatingGroupOrder
	}
	return false
}

func (x *RootComparisonSettings) GetTimePrecision() *duration.Duration {
	if x != nil {
		return x.TimePrecision
	}
	return nil
}

func (x *RootComparisonSettings) GetDecimalPrecision() string {
	if x != nil {
		return x.DecimalPrecision
	}
	return ""
}

func (x *RootComparisonSettings) GetCheckSimpleCollectionsOrder() *wrappers.BoolValue {
	if x != nil {
		return x.CheckSimpleCollectionsOrder
	}
	return nil
}

type ValueFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation FilterOperation `protobuf:"varint,1,opt,name=operation,proto3,enum=FilterOperation" json:"operation,omitempty"`
	Key       bool            `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Kind:
	//
	//	*ValueFilter_SimpleFilter
	//	*ValueFilter_MessageFilter
	//	*ValueFilter_ListFilter
	//	*ValueFilter_SimpleList
	//	*ValueFilter_NullValue
	Kind isValueFilter_Kind `protobuf_oneof:"kind"`
}

func (x *ValueFilter) Reset() {
	*x = ValueFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueFilter) ProtoMessage() {}

func (x *ValueFilter) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueFilter.ProtoReflect.Descriptor instead.
func (*ValueFilter) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{18}
}

func (x *ValueFilter) GetOperation() FilterOperation {
	if x != nil {
		return x.Operation
	}
	return FilterOperation_EQUAL
}

func (x *ValueFilter) GetKey() bool {
	if x != nil {
		return x.Key
	}
	return false
}

func (m *ValueFilter) GetKind() isValueFilter_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *ValueFilter) GetSimpleFilter() string {
	if x, ok := x.GetKind().(*ValueFilter_SimpleFilter); ok {
		return x.SimpleFilter
	}
	return ""
}

func (x *ValueFilter) GetMessageFilter() *MessageFilter {
	if x, ok := x.GetKind().(*ValueFilter_MessageFilter); ok {
		return x.MessageFilter
	}
	return nil
}

func (x *ValueFilter) GetListFilter() *ListValueFilter {
	if x, ok := x.GetKind().(*ValueFilter_ListFilter); ok {
		return x.ListFilter
	}
	return nil
}

func (x *ValueFilter) GetSimpleList() *SimpleList {
	if x, ok := x.GetKind().(*ValueFilter_SimpleList); ok {
		return x.SimpleList
	}
	return nil
}

func (x *ValueFilter) GetNullValue() NullValue {
	if x, ok := x.GetKind().(*ValueFilter_NullValue); ok {
		return x.NullValue
	}
	return NullValue_NULL_VALUE
}

type isValueFilter_Kind interface {
	isValueFilter_Kind()
}

type ValueFilter_SimpleFilter struct {
	SimpleFilter string `protobuf:"bytes,3,opt,name=simple_filter,json=simpleFilter,proto3,oneof"`
}

type ValueFilter_MessageFilter struct {
	MessageFilter *MessageFilter `protobuf:"bytes,4,opt,name=message_filter,json=messageFilter,proto3,oneof"`
}

type ValueFilter_ListFilter struct {
	ListFilter *ListValueFilter `protobuf:"bytes,5,opt,name=list_filter,json=listFilter,proto3,oneof"`
}

type ValueFilter_SimpleList struct {
	SimpleList *SimpleList `protobuf:"bytes,6,opt,name=simple_list,json=simpleList,proto3,oneof"`
}

type ValueFilter_NullValue struct {
	NullValue NullValue `protobuf:"varint,7,opt,name=null_value,json=nullValue,proto3,enum=NullValue,oneof"`
}

func (*ValueFilter_SimpleFilter) isValueFilter_Kind() {}

func (*ValueFilter_MessageFilter) isValueFilter_Kind() {}

func (*ValueFilter_ListFilter) isValueFilter_Kind() {}

func (*ValueFilter_SimpleList) isValueFilter_Kind() {}

func (*ValueFilter_NullValue) isValueFilter_Kind() {}

type ListValueFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*ValueFilter `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListValueFilter) Reset() {
	*x = ListValueFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValueFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValueFilter) ProtoMessage() {}

func (x *ListValueFilter) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValueFilter.ProtoReflect.Descriptor instead.
func (*ListValueFilter) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{19}
}

func (x *ListValueFilter) GetValues() []*ValueFilter {
	if x != nil {
		return x.Values
	}
	return nil
}

type SimpleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimpleValues []string `protobuf:"bytes,1,rep,name=simple_values,json=simpleValues,proto3" json:"simple_values,omitempty"`
}

func (x *SimpleList) Reset() {
	*x = SimpleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleList) ProtoMessage() {}

func (x *SimpleList) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleList.ProtoReflect.Descriptor instead.
func (*SimpleList) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{20}
}

func (x *SimpleList) GetSimpleValues() []string {
	if x != nil {
		return x.SimpleValues
	}
	return nil
}

type MessageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields             map[string]*ValueFilter `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ComparisonSettings *ComparisonSettings     `protobuf:"bytes,4,opt,name=comparison_settings,json=comparisonSettings,proto3" json:"comparison_settings,omitempty"`
}

func (x *MessageFilter) Reset() {
	*x = MessageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageFilter) ProtoMessage() {}

func (x *MessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageFilter.ProtoReflect.Descriptor instead.
func (*MessageFilter) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{21}
}

func (x *MessageFilter) GetFields() map[string]*ValueFilter {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *MessageFilter) GetComparisonSettings() *ComparisonSettings {
	if x != nil {
		return x.ComparisonSettings
	}
	return nil
}

type MetadataFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyFilters map[string]*MetadataFilter_SimpleFilter `protobuf:"bytes,1,rep,name=property_filters,json=propertyFilters,proto3" json:"property_filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MetadataFilter) Reset() {
	*x = MetadataFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataFilter) ProtoMessage() {}

func (x *MetadataFilter) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataFilter.ProtoReflect.Descriptor instead.
func (*MetadataFilter) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{22}
}

func (x *MetadataFilter) GetPropertyFilters() map[string]*MetadataFilter_SimpleFilter {
	if x != nil {
		return x.PropertyFilters
	}
	return nil
}

type RootMessageFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The message type to match
	MessageType string `protobuf:"bytes,1,opt,name=messageType,proto3" json:"messageType,omitempty"`
	// The filter to match message's content
	MessageFilter *MessageFilter `protobuf:"bytes,2,opt,name=message_filter,json=messageFilter,proto3" json:"message_filter,omitempty"`
	// The filter to match message's metadata content
	MetadataFilter *MetadataFilter `protobuf:"bytes,3,opt,name=metadata_filter,json=metadataFilter,proto3" json:"metadata_filter,omitempty"`
	// Settings that will be used for comparing both filters (MessageFilter and MetadataFilter)
	ComparisonSettings *RootComparisonSettings `protobuf:"bytes,4,opt,name=comparison_settings,json=comparisonSettings,proto3" json:"comparison_settings,omitempty"`
	// Description that may contain some information about the RootMessageFilter
	Description *wrappers.StringValue `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RootMessageFilter) Reset() {
	*x = RootMessageFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootMessageFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootMessageFilter) ProtoMessage() {}

func (x *RootMessageFilter) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootMessageFilter.ProtoReflect.Descriptor instead.
func (*RootMessageFilter) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{23}
}

func (x *RootMessageFilter) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *RootMessageFilter) GetMessageFilter() *MessageFilter {
	if x != nil {
		return x.MessageFilter
	}
	return nil
}

func (x *RootMessageFilter) GetMetadataFilter() *MetadataFilter {
	if x != nil {
		return x.MetadataFilter
	}
	return nil
}

func (x *RootMessageFilter) GetComparisonSettings() *RootComparisonSettings {
	if x != nil {
		return x.ComparisonSettings
	}
	return nil
}

func (x *RootMessageFilter) GetDescription() *wrappers.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

type Checkpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                                          string                                                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BookNameToSessionAliasToDirectionCheckpoint map[string]*Checkpoint_SessionAliasToDirectionCheckpoint `protobuf:"bytes,3,rep,name=book_name_to_session_alias_to_direction_checkpoint,json=bookNameToSessionAliasToDirectionCheckpoint,proto3" json:"book_name_to_session_alias_to_direction_checkpoint,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Checkpoint) Reset() {
	*x = Checkpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint) ProtoMessage() {}

func (x *Checkpoint) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{24}
}

func (x *Checkpoint) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Checkpoint) GetBookNameToSessionAliasToDirectionCheckpoint() map[string]*Checkpoint_SessionAliasToDirectionCheckpoint {
	if x != nil {
		return x.BookNameToSessionAliasToDirectionCheckpoint
	}
	return nil
}

type EventID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique event id in TH2 deploy
	BookName       string               `protobuf:"bytes,2,opt,name=book_name,json=bookName,proto3" json:"book_name,omitempty"`
	Scope          string               `protobuf:"bytes,3,opt,name=scope,proto3" json:"scope,omitempty"`
	StartTimestamp *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
}

func (x *EventID) Reset() {
	*x = EventID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventID) ProtoMessage() {}

func (x *EventID) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventID.ProtoReflect.Descriptor instead.
func (*EventID) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{25}
}

func (x *EventID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventID) GetBookName() string {
	if x != nil {
		return x.BookName
	}
	return ""
}

func (x *EventID) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *EventID) GetStartTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 *EventID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId           *EventID             `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // Event id of parent event. It is null for root event
	EndTimestamp       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	Status             EventStatus          `protobuf:"varint,5,opt,name=status,proto3,enum=EventStatus" json:"status,omitempty"` // Aggregated status of current and children events which sync written.
	Name               string               `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Type               string               `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Body               []byte               `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	AttachedMessageIds []*MessageID         `protobuf:"bytes,9,rep,name=attached_message_ids,json=attachedMessageIds,proto3" json:"attached_message_ids,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{26}
}

func (x *Event) GetId() *EventID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Event) GetParentId() *EventID {
	if x != nil {
		return x.ParentId
	}
	return nil
}

func (x *Event) GetEndTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.EndTimestamp
	}
	return nil
}

func (x *Event) GetStatus() EventStatus {
	if x != nil {
		return x.Status
	}
	return EventStatus_SUCCESS
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Event) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Event) GetAttachedMessageIds() []*MessageID {
	if x != nil {
		return x.AttachedMessageIds
	}
	return nil
}

type EventBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata      *EventBatchMetadata `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ParentEventId *EventID            `protobuf:"bytes,1,opt,name=parent_event_id,json=parentEventId,proto3" json:"parent_event_id,omitempty"`
	Events        []*Event            `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"` // Events optional related to between themselves. No events outside this batch should refer to the events in this batch.
}

func (x *EventBatch) Reset() {
	*x = EventBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventBatch) ProtoMessage() {}

func (x *EventBatch) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventBatch.ProtoReflect.Descriptor instead.
func (*EventBatch) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{27}
}

func (x *EventBatch) GetMetadata() *EventBatchMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *EventBatch) GetParentEventId() *EventID {
	if x != nil {
		return x.ParentEventId
	}
	return nil
}

func (x *EventBatch) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type MetadataFilter_SimpleFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation FilterOperation `protobuf:"varint,1,opt,name=operation,proto3,enum=FilterOperation" json:"operation,omitempty"`
	Key       bool            `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to FilterValue:
	//
	//	*MetadataFilter_SimpleFilter_Value
	//	*MetadataFilter_SimpleFilter_SimpleList
	FilterValue isMetadataFilter_SimpleFilter_FilterValue `protobuf_oneof:"filter_value"`
}

func (x *MetadataFilter_SimpleFilter) Reset() {
	*x = MetadataFilter_SimpleFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataFilter_SimpleFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataFilter_SimpleFilter) ProtoMessage() {}

func (x *MetadataFilter_SimpleFilter) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataFilter_SimpleFilter.ProtoReflect.Descriptor instead.
func (*MetadataFilter_SimpleFilter) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{22, 0}
}

func (x *MetadataFilter_SimpleFilter) GetOperation() FilterOperation {
	if x != nil {
		return x.Operation
	}
	return FilterOperation_EQUAL
}

func (x *MetadataFilter_SimpleFilter) GetKey() bool {
	if x != nil {
		return x.Key
	}
	return false
}

func (m *MetadataFilter_SimpleFilter) GetFilterValue() isMetadataFilter_SimpleFilter_FilterValue {
	if m != nil {
		return m.FilterValue
	}
	return nil
}

func (x *MetadataFilter_SimpleFilter) GetValue() string {
	if x, ok := x.GetFilterValue().(*MetadataFilter_SimpleFilter_Value); ok {
		return x.Value
	}
	return ""
}

func (x *MetadataFilter_SimpleFilter) GetSimpleList() *SimpleList {
	if x, ok := x.GetFilterValue().(*MetadataFilter_SimpleFilter_SimpleList); ok {
		return x.SimpleList
	}
	return nil
}

type isMetadataFilter_SimpleFilter_FilterValue interface {
	isMetadataFilter_SimpleFilter_FilterValue()
}

type MetadataFilter_SimpleFilter_Value struct {
	Value string `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type MetadataFilter_SimpleFilter_SimpleList struct {
	SimpleList *SimpleList `protobuf:"bytes,4,opt,name=simple_list,json=simpleList,proto3,oneof"`
}

func (*MetadataFilter_SimpleFilter_Value) isMetadataFilter_SimpleFilter_FilterValue() {}

func (*MetadataFilter_SimpleFilter_SimpleList) isMetadataFilter_SimpleFilter_FilterValue() {}

type Checkpoint_SessionAliasToDirectionCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionAliasToDirectionCheckpoint map[string]*Checkpoint_DirectionCheckpoint `protobuf:"bytes,1,rep,name=session_alias_to_direction_checkpoint,json=sessionAliasToDirectionCheckpoint,proto3" json:"session_alias_to_direction_checkpoint,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Checkpoint_SessionAliasToDirectionCheckpoint) Reset() {
	*x = Checkpoint_SessionAliasToDirectionCheckpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint_SessionAliasToDirectionCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint_SessionAliasToDirectionCheckpoint) ProtoMessage() {}

func (x *Checkpoint_SessionAliasToDirectionCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint_SessionAliasToDirectionCheckpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint_SessionAliasToDirectionCheckpoint) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{24, 1}
}

func (x *Checkpoint_SessionAliasToDirectionCheckpoint) GetSessionAliasToDirectionCheckpoint() map[string]*Checkpoint_DirectionCheckpoint {
	if x != nil {
		return x.SessionAliasToDirectionCheckpoint
	}
	return nil
}

type Checkpoint_DirectionCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirectionToCheckpointData map[int32]*Checkpoint_CheckpointData `protobuf:"bytes,2,rep,name=direction_to_checkpoint_data,json=directionToCheckpointData,proto3" json:"direction_to_checkpoint_data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Checkpoint_DirectionCheckpoint) Reset() {
	*x = Checkpoint_DirectionCheckpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint_DirectionCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint_DirectionCheckpoint) ProtoMessage() {}

func (x *Checkpoint_DirectionCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint_DirectionCheckpoint.ProtoReflect.Descriptor instead.
func (*Checkpoint_DirectionCheckpoint) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{24, 2}
}

func (x *Checkpoint_DirectionCheckpoint) GetDirectionToCheckpointData() map[int32]*Checkpoint_CheckpointData {
	if x != nil {
		return x.DirectionToCheckpointData
	}
	return nil
}

type Checkpoint_CheckpointData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence  int64                `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`  // Message sequence number in session
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Message creation timestamp
}

func (x *Checkpoint_CheckpointData) Reset() {
	*x = Checkpoint_CheckpointData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_th2_grpc_common_common_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checkpoint_CheckpointData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checkpoint_CheckpointData) ProtoMessage() {}

func (x *Checkpoint_CheckpointData) ProtoReflect() protoreflect.Message {
	mi := &file_th2_grpc_common_common_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checkpoint_CheckpointData.ProtoReflect.Descriptor instead.
func (*Checkpoint_CheckpointData) Descriptor() ([]byte, []int) {
	return file_th2_grpc_common_common_proto_rawDescGZIP(), []int{24, 3}
}

func (x *Checkpoint_CheckpointData) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *Checkpoint_CheckpointData) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_th2_grpc_common_common_proto protoreflect.FileDescriptor

var file_th2_grpc_common_common_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x74, 0x68, 0x32, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x58, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xfe, 0x01, 0x0a, 0x09, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a,
	0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3b, 0x0a, 0x12, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x0f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x3d, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x22, 0xd6, 0x01, 0x0a, 0x12, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xbf, 0x01, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x2b, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x1a, 0x41, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x83, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x77, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x61, 0x77, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x6a, 0x0a, 0x0a,
	0x41, 0x6e, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x37, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x6e, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x34, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x24, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0f, 0x52, 0x61, 0x77, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x52,
	0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x72, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x7a, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x01, 0x22, 0x54, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x0f, 0x66, 0x61, 0x69,
	0x6c, 0x5f, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0xcc, 0x02, 0x0a, 0x16, 0x52, 0x6f,
	0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x1e, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xc9, 0x02, 0x0a, 0x0b, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0d, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0b, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x6e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x37, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x31, 0x0a,
	0x0a, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0xde, 0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x44, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x69, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72,
	0x69, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x47, 0x0a, 0x0b,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10,
	0x03, 0x22, 0xee, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x0c, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2e, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x60, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xb0, 0x02, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x69, 0x73, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x08, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0xa5, 0x01, 0x0a, 0x32, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x2b, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x8d, 0x01, 0x0a,
	0x30, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x6f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xc3, 0x02, 0x0a,
	0x21, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0xa6, 0x01, 0x0a, 0x25, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x54, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x21, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x75, 0x0a, 0x26, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x54, 0x6f, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x86, 0x02, 0x0a, 0x13, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x7f, 0x0a, 0x1c, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x19, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x68, 0x0a, 0x1e, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x1a, 0x66, 0x0a, 0x0e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x91, 0x01, 0x0a, 0x07, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xaf, 0x02,
	0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x25, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x6e, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x3c, 0x0a, 0x14, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x12, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x4a, 0x04, 0x08, 0x03, 0x10, 0x04, 0x22,
	0x8f, 0x01, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2f,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x2a, 0x22, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x49, 0x52, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x43,
	0x4f, 0x4e, 0x44, 0x10, 0x01, 0x2a, 0x1b, 0x0a, 0x09, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x10, 0x00, 0x2a, 0x3d, 0x0a, 0x0e, 0x46, 0x61, 0x69, 0x6c, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x4f, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x53, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x10,
	0x02, 0x2a, 0xf2, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f,
	0x54, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e, 0x10,
	0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x10, 0x05, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x5f, 0x4c,
	0x49, 0x4b, 0x45, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x52, 0x45, 0x10, 0x08, 0x12,
	0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x4f, 0x52, 0x45, 0x10, 0x09, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x45, 0x53, 0x53, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x54, 0x5f, 0x4c,
	0x45, 0x53, 0x53, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x57, 0x49, 0x4c, 0x44, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x54, 0x5f, 0x57, 0x49, 0x4c, 0x44, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x0d, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x51, 0x5f, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x43, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x51, 0x5f, 0x44, 0x45, 0x43, 0x49, 0x4d, 0x41, 0x4c, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0f, 0x2a, 0x26, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x42, 0x3a,
	0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x61, 0x63, 0x74, 0x70, 0x72, 0x6f, 0x2e, 0x74,
	0x68, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01,
	0x5a, 0x18, 0x74, 0x68, 0x32, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x68, 0x32, 0x5f, 0x67,
	0x72, 0x70, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_th2_grpc_common_common_proto_rawDescOnce sync.Once
	file_th2_grpc_common_common_proto_rawDescData = file_th2_grpc_common_common_proto_rawDesc
)

func file_th2_grpc_common_common_proto_rawDescGZIP() []byte {
	file_th2_grpc_common_common_proto_rawDescOnce.Do(func() {
		file_th2_grpc_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_th2_grpc_common_common_proto_rawDescData)
	})
	return file_th2_grpc_common_common_proto_rawDescData
}

var file_th2_grpc_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_th2_grpc_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_th2_grpc_common_common_proto_goTypes = []interface{}{
	(Direction)(0),                      // 0: Direction
	(NullValue)(0),                      // 1: NullValue
	(FailUnexpected)(0),                 // 2: FailUnexpected
	(FilterOperation)(0),                // 3: FilterOperation
	(EventStatus)(0),                    // 4: EventStatus
	(RequestStatus_Status)(0),           // 5: RequestStatus.Status
	(*ConnectionID)(nil),                // 6: ConnectionID
	(*MessageID)(nil),                   // 7: MessageID
	(*EventBatchMetadata)(nil),          // 8: EventBatchMetadata
	(*MessageGroupBatchMetadata)(nil),   // 9: MessageGroupBatchMetadata
	(*MessageMetadata)(nil),             // 10: MessageMetadata
	(*RawMessageMetadata)(nil),          // 11: RawMessageMetadata
	(*Value)(nil),                       // 12: Value
	(*ListValue)(nil),                   // 13: ListValue
	(*Message)(nil),                     // 14: Message
	(*RawMessage)(nil),                  // 15: RawMessage
	(*AnyMessage)(nil),                  // 16: AnyMessage
	(*MessageGroup)(nil),                // 17: MessageGroup
	(*MessageBatch)(nil),                // 18: MessageBatch
	(*RawMessageBatch)(nil),             // 19: RawMessageBatch
	(*MessageGroupBatch)(nil),           // 20: MessageGroupBatch
	(*RequestStatus)(nil),               // 21: RequestStatus
	(*ComparisonSettings)(nil),          // 22: ComparisonSettings
	(*RootComparisonSettings)(nil),      // 23: RootComparisonSettings
	(*ValueFilter)(nil),                 // 24: ValueFilter
	(*ListValueFilter)(nil),             // 25: ListValueFilter
	(*SimpleList)(nil),                  // 26: SimpleList
	(*MessageFilter)(nil),               // 27: MessageFilter
	(*MetadataFilter)(nil),              // 28: MetadataFilter
	(*RootMessageFilter)(nil),           // 29: RootMessageFilter
	(*Checkpoint)(nil),                  // 30: Checkpoint
	(*EventID)(nil),                     // 31: EventID
	(*Event)(nil),                       // 32: Event
	(*EventBatch)(nil),                  // 33: EventBatch
	nil,                                 // 34: MessageMetadata.PropertiesEntry
	nil,                                 // 35: RawMessageMetadata.PropertiesEntry
	nil,                                 // 36: Message.FieldsEntry
	nil,                                 // 37: MessageFilter.FieldsEntry
	(*MetadataFilter_SimpleFilter)(nil), // 38: MetadataFilter.SimpleFilter
	nil,                                 // 39: MetadataFilter.PropertyFiltersEntry
	nil,                                 // 40: Checkpoint.BookNameToSessionAliasToDirectionCheckpointEntry
	(*Checkpoint_SessionAliasToDirectionCheckpoint)(nil), // 41: Checkpoint.SessionAliasToDirectionCheckpoint
	(*Checkpoint_DirectionCheckpoint)(nil),               // 42: Checkpoint.DirectionCheckpoint
	(*Checkpoint_CheckpointData)(nil),                    // 43: Checkpoint.CheckpointData
	nil,                                                  // 44: Checkpoint.SessionAliasToDirectionCheckpoint.SessionAliasToDirectionCheckpointEntry
	nil,                                                  // 45: Checkpoint.DirectionCheckpoint.DirectionToCheckpointDataEntry
	(*timestamp.Timestamp)(nil),                          // 46: google.protobuf.Timestamp
	(*duration.Duration)(nil),                            // 47: google.protobuf.Duration
	(*wrappers.BoolValue)(nil),                           // 48: google.protobuf.BoolValue
	(*wrappers.StringValue)(nil),                         // 49: google.protobuf.StringValue
}
var file_th2_grpc_common_common_proto_depIdxs = []int32{
	6,  // 0: MessageID.connection_id:type_name -> ConnectionID
	0,  // 1: MessageID.direction:type_name -> Direction
	46, // 2: MessageID.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 3: MessageMetadata.id:type_name -> MessageID
	34, // 4: MessageMetadata.properties:type_name -> MessageMetadata.PropertiesEntry
	7,  // 5: RawMessageMetadata.id:type_name -> MessageID
	35, // 6: RawMessageMetadata.properties:type_name -> RawMessageMetadata.PropertiesEntry
	1,  // 7: Value.null_value:type_name -> NullValue
	14, // 8: Value.message_value:type_name -> Message
	13, // 9: Value.list_value:type_name -> ListValue
	12, // 10: ListValue.values:type_name -> Value
	31, // 11: Message.parent_event_id:type_name -> EventID
	10, // 12: Message.metadata:type_name -> MessageMetadata
	36, // 13: Message.fields:type_name -> Message.FieldsEntry
	31, // 14: RawMessage.parent_event_id:type_name -> EventID
	11, // 15: RawMessage.metadata:type_name -> RawMessageMetadata
	14, // 16: AnyMessage.message:type_name -> Message
	15, // 17: AnyMessage.raw_message:type_name -> RawMessage
	16, // 18: MessageGroup.messages:type_name -> AnyMessage
	14, // 19: MessageBatch.messages:type_name -> Message
	15, // 20: RawMessageBatch.messages:type_name -> RawMessage
	9,  // 21: MessageGroupBatch.metadata:type_name -> MessageGroupBatchMetadata
	17, // 22: MessageGroupBatch.groups:type_name -> MessageGroup
	5,  // 23: RequestStatus.status:type_name -> RequestStatus.Status
	2,  // 24: ComparisonSettings.fail_unexpected:type_name -> FailUnexpected
	47, // 25: RootComparisonSettings.time_precision:type_name -> google.protobuf.Duration
	48, // 26: RootComparisonSettings.check_simple_collections_order:type_name -> google.protobuf.BoolValue
	3,  // 27: ValueFilter.operation:type_name -> FilterOperation
	27, // 28: ValueFilter.message_filter:type_name -> MessageFilter
	25, // 29: ValueFilter.list_filter:type_name -> ListValueFilter
	26, // 30: ValueFilter.simple_list:type_name -> SimpleList
	1,  // 31: ValueFilter.null_value:type_name -> NullValue
	24, // 32: ListValueFilter.values:type_name -> ValueFilter
	37, // 33: MessageFilter.fields:type_name -> MessageFilter.FieldsEntry
	22, // 34: MessageFilter.comparison_settings:type_name -> ComparisonSettings
	39, // 35: MetadataFilter.property_filters:type_name -> MetadataFilter.PropertyFiltersEntry
	27, // 36: RootMessageFilter.message_filter:type_name -> MessageFilter
	28, // 37: RootMessageFilter.metadata_filter:type_name -> MetadataFilter
	23, // 38: RootMessageFilter.comparison_settings:type_name -> RootComparisonSettings
	49, // 39: RootMessageFilter.description:type_name -> google.protobuf.StringValue
	40, // 40: Checkpoint.book_name_to_session_alias_to_direction_checkpoint:type_name -> Checkpoint.BookNameToSessionAliasToDirectionCheckpointEntry
	46, // 41: EventID.start_timestamp:type_name -> google.protobuf.Timestamp
	31, // 42: Event.id:type_name -> EventID
	31, // 43: Event.parent_id:type_name -> EventID
	46, // 44: Event.end_timestamp:type_name -> google.protobuf.Timestamp
	4,  // 45: Event.status:type_name -> EventStatus
	7,  // 46: Event.attached_message_ids:type_name -> MessageID
	8,  // 47: EventBatch.metadata:type_name -> EventBatchMetadata
	31, // 48: EventBatch.parent_event_id:type_name -> EventID
	32, // 49: EventBatch.events:type_name -> Event
	12, // 50: Message.FieldsEntry.value:type_name -> Value
	24, // 51: MessageFilter.FieldsEntry.value:type_name -> ValueFilter
	3,  // 52: MetadataFilter.SimpleFilter.operation:type_name -> FilterOperation
	26, // 53: MetadataFilter.SimpleFilter.simple_list:type_name -> SimpleList
	38, // 54: MetadataFilter.PropertyFiltersEntry.value:type_name -> MetadataFilter.SimpleFilter
	41, // 55: Checkpoint.BookNameToSessionAliasToDirectionCheckpointEntry.value:type_name -> Checkpoint.SessionAliasToDirectionCheckpoint
	44, // 56: Checkpoint.SessionAliasToDirectionCheckpoint.session_alias_to_direction_checkpoint:type_name -> Checkpoint.SessionAliasToDirectionCheckpoint.SessionAliasToDirectionCheckpointEntry
	45, // 57: Checkpoint.DirectionCheckpoint.direction_to_checkpoint_data:type_name -> Checkpoint.DirectionCheckpoint.DirectionToCheckpointDataEntry
	46, // 58: Checkpoint.CheckpointData.timestamp:type_name -> google.protobuf.Timestamp
	42, // 59: Checkpoint.SessionAliasToDirectionCheckpoint.SessionAliasToDirectionCheckpointEntry.value:type_name -> Checkpoint.DirectionCheckpoint
	43, // 60: Checkpoint.DirectionCheckpoint.DirectionToCheckpointDataEntry.value:type_name -> Checkpoint.CheckpointData
	61, // [61:61] is the sub-list for method output_type
	61, // [61:61] is the sub-list for method input_type
	61, // [61:61] is the sub-list for extension type_name
	61, // [61:61] is the sub-list for extension extendee
	0,  // [0:61] is the sub-list for field type_name
}

func init() { file_th2_grpc_common_common_proto_init() }
func file_th2_grpc_common_common_proto_init() {
	if File_th2_grpc_common_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_th2_grpc_common_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBatchMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGroupBatchMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMessageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawMessageBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageGroupBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComparisonSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootComparisonSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValueFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValueFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootMessageFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataFilter_SimpleFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint_SessionAliasToDirectionCheckpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint_DirectionCheckpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_th2_grpc_common_common_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checkpoint_CheckpointData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_th2_grpc_common_common_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Value_NullValue)(nil),
		(*Value_SimpleValue)(nil),
		(*Value_MessageValue)(nil),
		(*Value_ListValue)(nil),
	}
	file_th2_grpc_common_common_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*AnyMessage_Message)(nil),
		(*AnyMessage_RawMessage)(nil),
	}
	file_th2_grpc_common_common_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*ValueFilter_SimpleFilter)(nil),
		(*ValueFilter_MessageFilter)(nil),
		(*ValueFilter_ListFilter)(nil),
		(*ValueFilter_SimpleList)(nil),
		(*ValueFilter_NullValue)(nil),
	}
	file_th2_grpc_common_common_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*MetadataFilter_SimpleFilter_Value)(nil),
		(*MetadataFilter_SimpleFilter_SimpleList)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_th2_grpc_common_common_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_th2_grpc_common_common_proto_goTypes,
		DependencyIndexes: file_th2_grpc_common_common_proto_depIdxs,
		EnumInfos:         file_th2_grpc_common_common_proto_enumTypes,
		MessageInfos:      file_th2_grpc_common_common_proto_msgTypes,
	}.Build()
	File_th2_grpc_common_common_proto = out.File
	file_th2_grpc_common_common_proto_rawDesc = nil
	file_th2_grpc_common_common_proto_goTypes = nil
	file_th2_grpc_common_common_proto_depIdxs = nil
}
